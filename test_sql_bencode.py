from sql import *


def test_get_r_nodes():
    expected = b"\xf5\x98\x87\xd6\xaeR\x90I\xf1\xf1\xbb\xe9\xeb\xb3\xa6\xdb<\x87\x0c\xe1\x1f\x81W{q/$\x93\x9cf\xd5 \x83\xffRs\x9aW\xfaZ\x8e \x10\x10\xe4 1\xcf\x8c\x8e\xd8x\xb1\xa4\x0b\xe0\xf1L\x04\xf8`\xfc}T\x85\xfb\xa8;O\x08o]M\xe8\x83\x94\x81#Z=\xd9I\xcb\xe5\xfd\x11\xf4\x1fh\x8dg\xe8_\x7f\xfb\x91C\x1d\x189e/\x1a\xe1\xc92Y\xc8G\x1d\xfcq\xd5\x10:\xf69s\xfd\x1d\xdc\xcb\n\x9c|{\xbd\x93f2\xb5R\xebB\x89\xc0+'&A\xdc\xb3\xe5\x1d<\xfd\x0e\xce\xe7\xfe=@\x94:fR\xd0\xfb\xc6\xf9\xed#\x8f\xbbMVI\x17p\xa2\xe2b\xa6\x82%\"j\xdc\xaa\xac!\x9d\x9df\x9d\xf1\x81\x9as\xfcK_&\xfb\x06+\xab\xcd\x7f\x9f\xb3\x85\xc59\xbdr\xc6L\xaf\x8a\xe4\xd6\xaeR\x90I\xf1\xf1\xbb\xe9\xeb\xb3\xa6\xdb<\x87\x0c\xe1\xb3\x7fFV\xb7>\xbe(Fw\x96+\xecE}H;f\x18,Pn\xfa\x06^\xb1j\xd8\x80d\xda\xda\xbf\x92\xf0I\xf1\xf1\xbb\xe9\xeb\xb3\xa6\xdb<\x87\x0c>\x99$^R\xdeyH\xe0\xa7\xb7\xf3\xa8\xbe\xd6\xaeR\x90I\xf1\xf1\xbb\xe9\xeb\xb3\xa6\xdb<\x87\x0c\xe1<\xf3U7\xe8d\xde_\xd4kUi\xfb\xef\xf0\xa0gx\xe6*\xcc\xdfy\tW\xff/\tL\x1e\x97\xff\xe5\x85]\x1a[\xaf\xd5O\xd6)\x9b~\x0c\xc5\xc6\x08\"\x86;n^\xf1=}\x8f@\xcfu\x95\xb6\xceO[\xf6\xe5U@j\x97\x81Ab\xef:\xdf\x06\xd4\xa4'\xc6\x1e\x01\xa8\xd0\xa4\xc1\xf99\xee~W\xf1\x9cBx\xf8\xab\x7f\xd8t|\xe2\xbc\xff;]\x1a\xe1"
    assert len(expected) == 416
    assert (
        bencode_get(
            b"d2:ip6:1\xb5\x8e\xe9\r\xd41:rd2:id20:\xeb\xff6isQ\xffJ\xec)\xcd\xba\xab\xf2\xfb\xe3F|\xc2g5:nodes416:\xf5\x98\x87\xd6\xaeR\x90I\xf1\xf1\xbb\xe9\xeb\xb3\xa6\xdb<\x87\x0c\xe1\x1f\x81W{q/$\x93\x9cf\xd5 \x83\xffRs\x9aW\xfaZ\x8e \x10\x10\xe4 1\xcf\x8c\x8e\xd8x\xb1\xa4\x0b\xe0\xf1L\x04\xf8`\xfc}T\x85\xfb\xa8;O\x08o]M\xe8\x83\x94\x81#Z=\xd9I\xcb\xe5\xfd\x11\xf4\x1fh\x8dg\xe8_\x7f\xfb\x91C\x1d\x189e/\x1a\xe1\xc92Y\xc8G\x1d\xfcq\xd5\x10:\xf69s\xfd\x1d\xdc\xcb\n\x9c|{\xbd\x93f2\xb5R\xebB\x89\xc0+'&A\xdc\xb3\xe5\x1d<\xfd\x0e\xce\xe7\xfe=@\x94:fR\xd0\xfb\xc6\xf9\xed#\x8f\xbbMVI\x17p\xa2\xe2b\xa6\x82%\"j\xdc\xaa\xac!\x9d\x9df\x9d\xf1\x81\x9as\xfcK_&\xfb\x06+\xab\xcd\x7f\x9f\xb3\x85\xc59\xbdr\xc6L\xaf\x8a\xe4\xd6\xaeR\x90I\xf1\xf1\xbb\xe9\xeb\xb3\xa6\xdb<\x87\x0c\xe1\xb3\x7fFV\xb7>\xbe(Fw\x96+\xecE}H;f\x18,Pn\xfa\x06^\xb1j\xd8\x80d\xda\xda\xbf\x92\xf0I\xf1\xf1\xbb\xe9\xeb\xb3\xa6\xdb<\x87\x0c>\x99$^R\xdeyH\xe0\xa7\xb7\xf3\xa8\xbe\xd6\xaeR\x90I\xf1\xf1\xbb\xe9\xeb\xb3\xa6\xdb<\x87\x0c\xe1<\xf3U7\xe8d\xde_\xd4kUi\xfb\xef\xf0\xa0gx\xe6*\xcc\xdfy\tW\xff/\tL\x1e\x97\xff\xe5\x85]\x1a[\xaf\xd5O\xd6)\x9b~\x0c\xc5\xc6\x08\"\x86;n^\xf1=}\x8f@\xcfu\x95\xb6\xceO[\xf6\xe5U@j\x97\x81Ab\xef:\xdf\x06\xd4\xa4'\xc6\x1e\x01\xa8\xd0\xa4\xc1\xf99\xee~W\xf1\x9cBx\xf8\xab\x7f\xd8t|\xe2\xbc\xff;]\x1a\xe1e1:t8:\x81\xde\xf8\x97x\xbe\x01\xc31:y1:re",
            "r",
            "nodes",
        )
        == expected
    )


def test_misc():
    assert lookup("hello", b"5:helloi42e") == b"i42e"
    assert bencode_get_bytes(b"li1ei2eie3ee", 1) == b"i2eie3ee"
    assert bencode_get(b"li1ei2ei3ee", 1) == 2
    assert bencode_get(b"de", 1) == None
    assert bencode_get(b"le", 1) == None
